apply plugin: 'application'
apply plugin: 'antlr'

mainClassName = 'com.juliar.JuliarCompiler'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
	jcenter()
	flatDir {
		dir 'jars'
	}
}

dependencies {
	antlr 'org.antlr:antlr4:4.7'
	compile fileTree(dir: 'jars', include: '*.jar')
	compile 'org.ow2.asm:asm-all:6.0_BETA'
	compile 'org.fxmisc.richtext:richtextfx:0.7-M5'
	testCompile 'junit:junit:4.11'
}


generateGrammarSource {
  arguments += ['-no-listener','-package','com.juliar.parser','-visitor']
}

jar {
	manifest {
        attributes 'Main-Class': 'com.juliar.JuliarCompiler'
    }
	from (configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude 'LICENSE'
		exclude 'module-info.class'
		exclude 'META-INF/**'
		exclude 'com/ibm/**'
	}
	exclude('com/juliar/JuliarAndroid.class')
}


task Android(type: Jar) {
	dependsOn build
	baseName 'JuliarAndroidLib'
	manifest {
        attributes 'Main-Class': 'com.juliar.JuliarAndroid'
    }
	from(sourceSets.main.output) {  
        include "**"
    }  
	from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude 'LICENSE'
		exclude 'module-info.class'
		exclude 'META-INF/**'
		exclude 'com/ibm/**'
	}
	exclude('com/juliar/JuliarCompiler.class')
}

test {
	include 'com/juliar/test/**'
	testLogging {
		// Show that tests are run in the command-line output
		events 'started', 'passed'
	}
}